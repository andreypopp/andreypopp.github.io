(window.webpackJsonp=window.webpackJsonp||[]).push([["e351"],{JONq:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/writings/2014-08-06-react-style",function(){var e=n("ZFFd");return{page:e.default||e}}])},ZFFd:function(e,t,n){"use strict";n.r(t),n.d(t,"title",function(){return i}),n.d(t,"default",function(){return b});var a=n("z3IF"),l=n("2Fjn"),o=(n("mXGw"),n("SAVP")),r=n("SGno"),i="React Style",s={title:i},c=r.a;function b(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(o.b)(c,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Authoring ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://facebook.github.io/react"}),"React")," components always was a joy as it gives you a codebase with\nclear boundaries between concerns."),Object(o.b)("p",null,"However React.js, like most other solutions, doesnâ€™t help with styling\ncomponents. Should I write one big CSS file, or one separate file per component?\nYou are basically left on your own."),Object(o.b)("p",null,"By leaving styling out of the equation, you are most likely to face one of the\nfollowing problems:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'I have to maintain styles separately from user interface definitions. React\neliminated "templates" so why do we still write stylesheets?'),Object(o.b)("li",{parentName:"ul"},"There are no variables, functions and other abstraction mechanisms available\nwhile writing styles."),Object(o.b)("li",{parentName:"ul"},"Everything ends up in a flat namespace which makes maintaining a nightmare."),Object(o.b)("li",{parentName:"ul"},"Cascading makes it hard to reason about styles and even a single little change\ncan break seemingly unrelated things."),Object(o.b)("li",{parentName:"ul"},"There's always a separation between static and dynamic styles in an\napplication.")),Object(o.b)("p",null,"Of course CSS preprocessors such as Sass or Less alleviate some of the\nlisted points but certainly not all."),Object(o.b)("p",null,"We need a solution."),Object(o.b)("p",null,"In this blog post I want to introduce ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/SanderSpies/react-style"}),"React Style"),", a novel approach to\nstyling React components which, I think, comes close to addressing the listed\nproblems."),Object(o.b)("h2",null,"Introducing React Style"),Object(o.b)("p",null,"The main idea of React Style is that styles are defined within the component\nboundaries that React.js offers. This is similar to what we already do when\ndeclaring inline styles for DOM components:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"<button style={{backgroundColor: 'white'}}>\n  Hello\n</button>\n")),Object(o.b)("p",null,"In fact, this solution addresses all the problems we listed above. But at the\ncost of a huge performance penalty."),Object(o.b)("p",null,"Instead React Style makes it possible to extract parts of styles into CSS\nclasses while still allowing to use JavaScript to define style rules."),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"var ToggeButton = React.createClass({\n\n  normal: ReactStyle(function() {\n    return {\n      color: 'white',\n      backgroundColor: 'black'\n    }\n  }),\n\n  active: ReactStyle(function() {\n    return {\n      backgroundColor: this.props.activeColor\n    }\n  }),\n\n  render() {\n    var styles = this.state.active ? this.active() : this.normal()\n    return (\n      <button styles={styles}>\n        Toggle\n      </button>\n    )\n  },\n\n  getInitialState() {\n    return {active: false}\n  }\n})\n")),Object(o.b)("p",null,"All styles are defined within methods decorated with ",Object(o.b)("inlineCode",{parentName:"p"},"ReactStyle()")," decorator.\nThe ",Object(o.b)("inlineCode",{parentName:"p"},"styles")," property is used to apply styles to DOM components."),Object(o.b)("p",null,"Overall that's not much different than using the ",Object(o.b)("inlineCode",{parentName:"p"},"style")," prop to define styles\ninline. But these small distinctions allow to extract some of the styles into\ngenerated CSS classes."),Object(o.b)("p",null,"The example above will result in the following stylesheet:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),".a {\n  color: 'white';\n  background-color: 'black';\n}\n")),Object(o.b)("p",null,"The JavaScript code itself is transformed into:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"var ToggeButton = React.createClass({\n\n  normal: function() {\n    return ' a'\n  },\n\n  active: ReactStyle(function() {\n    return {backgroundColor: this.props.activeColor}\n  }),\n\n  getInitialState() {\n    return {active: false}\n  },\n\n  render() {\n    var styles = [this.normal(), this.state.active && this.active()]\n    return (\n      <button styles={styles}>\n        Toggle\n      </button>\n    )\n  }\n})\n")),Object(o.b)("p",null,"Note that the method ",Object(o.b)("inlineCode",{parentName:"p"},"normal()")," now returns corresponding CSS class name instead\nof inline style declarations."),Object(o.b)("p",null,"The other style, ",Object(o.b)("inlineCode",{parentName:"p"},"active()")," is left as-is, because it references dynamic value\n",Object(o.b)("inlineCode",{parentName:"p"},"this.props.activeColor"),"."),Object(o.b)("p",null,"That way React Style allows you to manage both static and dynamic styles in an\nuniform way while still having performance benefits of CSS classes."),Object(o.b)("h2",null,"How to write styles with JavaScript"),Object(o.b)("p",null,"At first, the idea to write styles in JavaScript can seem a little strange."),Object(o.b)("p",null,"The first advantage we gain is that we use the same language and so the same\nunified API to define static and dynamic styles."),Object(o.b)("p",null,"The second advantage is that the full power of a programming language is at our\nhands: we automatically gain variables, functions (which also can be used as\nmixins), proper namespaces and full range of control flow constructs."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"var {darken} = require('./functions')\nvar {colors} = require('./vars')\nvar {buttonSmall} = require('./mixins')\n\nvar Component = React.createClass({\n\n  style: ReactStyle(function() {\n    return Object.assign({}, buttonSmall, {\n      backgroundColor: darken(colors.brand, 10)\n    })\n  }),\n\n  ...\n\n})\n")),Object(o.b)("h2",null,"Programmatic usage"),Object(o.b)("p",null,"Programmatic usage is as simple as the following two lines of code:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"var transformString = require('react-style/lib/transformString')\nvar {source, css} = transformString(source)\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"source")," variable will contain transformed JavaScript code while ",Object(o.b)("inlineCode",{parentName:"p"},"css")," the\ngenerated CSS code."),Object(o.b)("p",null,"One could use this API to implement plugins for their favourite bundler,\nBrowserify or Require.js."),Object(o.b)("h2",null,"Webpack integration"),Object(o.b)("p",null,"The recommended way to use React Style at the moment is to use it with\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://webpack.github.io"}),"Webpack"),"."),Object(o.b)("p",null,"Webpack is a module bundler that is similar to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://browserify.org"}),"Browserify"),", but is more powerful\nand configurable. One of the advantages it has over Browserify is that it can\nbundle stylesheets and static assets along with JavaScript code."),Object(o.b)("p",null,"The example Webpack configuration with React Style looks like:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"var ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nmodule.exports = {\n  entry: './index.js',\n  output: {\n    filename: 'bundle.js',\n    path: __dirname + '/assets',\n    publicPath: 'assets/'\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        loaders: ['react-style/lib/webpack', 'jsx-loader']\n      },\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style-loader', 'css-loader')\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css')\n  ]\n}\n")),Object(o.b)("p",null,"The generated CSS code will be automatically extracted and bundled into\n",Object(o.b)("inlineCode",{parentName:"p"},"styles.css")," while transformed JavaScript code will end up in ",Object(o.b)("inlineCode",{parentName:"p"},"bundle.js"),"."),Object(o.b)("p",null,"If we add ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/webpack/file-loader"}),"file-loader")," for ",Object(o.b)("inlineCode",{parentName:"p"},".png")," and ",Object(o.b)("inlineCode",{parentName:"p"},".jpeg")," files, for example, we will be\nable to reference images with ",Object(o.b)("inlineCode",{parentName:"p"},"require(..)")," function. Same for fonts."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"function image(url) {\n  return 'url(' + url + ')'\n}\n\nvar Component = React.createClass({\n\n  normal: ReactStyle(function() {\n    return {\n      background: image(require('./img/bg.png'))\n    }\n  }),\n\n  ...\n\n})\n")),Object(o.b)("p",null,"The file at ",Object(o.b)("inlineCode",{parentName:"p"},"./img/bg.png")," will be moved by Webpack to the bundle output directory\nand ",Object(o.b)("inlineCode",{parentName:"p"},"require('./img/bg.png')")," will resolve to the correct URL."),Object(o.b)("p",null,"You can try the described setup of React Style and Webpack in the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/SanderSpies/react-style/tree/master/example"}),"example"),"\ndirectory in the repository:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"% npm install\n% webpack\n% open index.html\n")),Object(o.b)("p",null,"Note though, that at the moment, React Style Webpack loader depends on a fork of\n",Object(o.b)("inlineCode",{parentName:"p"},"extract-text-webpack-plugin")," (see ",Object(o.b)("inlineCode",{parentName:"p"},"package.json")," in the examples directory)."),Object(o.b)("h2",null,"Epilogue"),Object(o.b)("p",null,"React Style development takes place at ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/SanderSpies/react-style"}),"GitHub"),". Have fun!"),Object(o.b)("p",null,"Don't forget to leave feedback or make pull request for missing functionality\nand bug fixes."),Object(o.b)("p",null,"Thanks to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/SanderSpies"}),"@SanderSpies")," for React Style and for the feedback to this blog\npost."))}b.isMDXComponent=!0}},[["JONq","5d41","9da1"]]]);