(window.webpackJsonp=window.webpackJsonp||[]).push([["110e"],{"7Jig":function(e,n,t){"use strict";t.r(n),t.d(n,"title",function(){return m}),t.d(n,"default",function(){return p});var i=t("z3IF"),o=t("2Fjn"),a=(t("mXGw"),t("SAVP")),s=t("SGno"),m="Ensime for Vim",r={title:m},c=s.a;function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(c,Object(i.a)({},r,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Just a small note on a project I'm working on in my spare time (unfortunately\nthat means only 2-3 hours per week) — Ensime integration for Vim, see my GitHub\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/andreypopp/ensime"}),"fork")," of Ensime."),Object(a.b)("p",null,"Installation is as easy as:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{}),"git clone https://github.com/andreypopp/ensime.git\ncd ensime\nsbt stage\nln -s dist_SCALAVERSION dist\n")),Object(a.b)("p",null,"After that you will be able to start Ensime with ",Object(a.b)("inlineCode",{parentName:"p"},":Ensime")," Vim command and use\nomnicompletion functionality as well as ",Object(a.b)("inlineCode",{parentName:"p"},":EnsimeTypecheckFile")," command for\ntype checking current file (integrated with Vim's quickfix). Besides these I\nhaven't yet implemented other features of Ensime — the first ones on my todo\nlist is ",Object(a.b)("em",{parentName:"p"},"type at point"),", ",Object(a.b)("em",{parentName:"p"},"call arguments completion"),", ",Object(a.b)("em",{parentName:"p"},"rename refactoring"),"."))}p.isMDXComponent=!0},ZAUc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/writings/2012-09-01-ensime-for-vim",function(){var e=t("7Jig");return{page:e.default||e}}])}},[["ZAUc","5d41","9da1"]]]);