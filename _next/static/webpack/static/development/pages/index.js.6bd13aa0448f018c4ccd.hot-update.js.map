{"version":3,"file":"static/webpack/static/development/pages/index.js.6bd13aa0448f018c4ccd.hot-update.js","sources":["webpack:///./Section.js","webpack:///./pages/index.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { Text, View, ScrollView, TouchableOpacity } from 'react-native';\nimport * as UI from 'ui';\nimport * as Style from 'ui/Style';\n\nexport let Section = (props: {| children: React.Node, title: string |}) => {\n  let styles = Style.useStyles(theme => ({\n    root: {\n      padding: 10,\n      backgroundColor: theme.backgroundSecondaryColor,\n      width: '100%',\n      borderTopWidth: 2,\n      borderTopColor: theme.dimmedColor,\n      paddingVertical: 10,\n    },\n    title: {\n      color: theme.dimmedColor,\n      fontWeight: '900',\n      fontSize: '8pt',\n      textTransform: 'uppercase',\n    },\n    children: {\n      paddingTop: 10,\n    },\n  }));\n  return (\n    <View style={styles.root}>\n      <Text style={styles.title}>{props.title}</Text>\n      <View style={styles.children}>{props.children}</View>\n    </View>\n  );\n};\n","// @flow\n\nimport * as React from 'react';\nimport { Text, View, ScrollView, TouchableOpacity } from 'react-native';\nimport * as UI from 'ui';\nimport * as Style from 'ui/Style';\nimport { Content, Link } from 'ui/Content';\nimport { Page } from '../Page';\nimport { Section } from '../Section';\nimport { handlePress } from 'ui/Link';\n\nlet writingsIndex = require('../writings-index.compute');\n\nlet geoloc = (\n  <Link href=\"https://en.wikipedia.org/wiki/Saint_Petersburg\">\n    St.Petersburg, Russia\n  </Link>\n);\n\nlet twitter = (\n  <Link href=\"https://twitter.com/andreypopp\">twitter.com/andreypopp</Link>\n);\n\nlet github = (\n  <Link href=\"https://github.com/andreypopp\">github.com/andreypopp</Link>\n);\n\nlet email = <Link href=\"mailto:8mayday@gmail.com\">8mayday@gmail.com</Link>;\n\nlet WritingLink = ({ writing }) => {\n  let _handlePress = (e: UIEvent) => handlePress(e, writing.href);\n  let styles = Style.useStyles(theme => ({\n    root: {\n      paddingVertical: 8,\n    },\n    date: {\n      color: theme.dimmedColor,\n      fontSize: '8pt',\n      fontWeight: '800',\n    },\n    title: {\n      textTransform: 'uppercase',\n      color: theme.linkColor,\n      fontWeight: '800',\n    },\n  }));\n  return (\n    <TouchableOpacity style={styles.root}>\n      <Text\n        accessibilityRole=\"link\"\n        style={styles.title}\n        href={writing.href}\n        onPress={_handlePress}\n      >\n        {writing.title}\n      </Text>\n      <Text style={styles.date}>\n        {writing.date.year}/{writing.date.month}/{writing.date.day}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nlet WritingsArchive = ({ writings }) => {\n  let children = [];\n  let lastYear = null;\n  let styles = Style.useStyles(theme => ({\n    year: {\n      paddingTop: 30,\n    },\n    yearText: {\n      color: theme.dimmedColor,\n      fontWeight: '900',\n      fontSize: '8pt',\n    },\n  }));\n\n  for (let item of writings) {\n    if (item.date.year !== lastYear) {\n      lastYear = item.date.year;\n      children.push(\n        <View style={styles.year} key={`year-${lastYear}`}>\n          <Text style={styles.yearText}>{lastYear}</Text>\n        </View>,\n      );\n    }\n\n    children.push(\n      <View key={item.href}>\n        <WritingLink writing={item} />\n      </View>,\n    );\n  }\n  return <View>{children}</View>;\n};\n\nexport default (props: {}) => {\n  let styles = Style.useStyles(theme => ({\n    me: {\n      paddingVertical: 50,\n    },\n  }));\n  return (\n    <Page>\n      <Section title=\"Recently\">\n        <View>\n          {writingsIndex.slice(0, 3).map(item => (\n            <View key={item.href}>\n              <WritingLink writing={item} />\n            </View>\n          ))}\n        </View>\n      </Section>\n      <View style={styles.me}>\n        <Content>\n          <p>I'm Andrey Popp, software engineer based in {geoloc}.</p>\n          <p>\n            You can follow me on {twitter} which is mostly about tech. If you\n            have something to say to me directly you can reach me via {email}.\n          </p>\n          <p>\n            The list of my current interests include: Reason/OCaml, query\n            languages, end-user programming, development tooling, programming\n            language theory, vim/neovim, ...\n          </p>\n        </Content>\n      </View>\n      <Section title=\"Archive\">\n        <WritingsArchive writings={writingsIndex} />\n      </Section>\n    </Page>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAfA;AAAA;AAmBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AATA;AAAA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AAAA;AAHA;AAAA;AAAA;AACA;AADA;AAcA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}