{"version":3,"file":"static/webpack/static/development/pages/_app.js.ddee7c308c2cf02b450a.hot-update.js","sources":["webpack:///../node_modules/ui/Content.js"],"sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { Text } from 'react-native-web';\nimport { MDXProvider } from '@mdx-js/react';\nimport * as Style from './Style';\nimport { handlePress } from './Link';\n\nexport let Link = ({\n  href,\n  children,\n}: {|\n  href: string,\n  children: React.Node,\n|}) => {\n  let _handlePress = (e: UIEvent) => handlePress(e, href);\n  let style = Style.useStyle(theme => ({\n    // TODO: move to theme\n    color: theme.themeName === 'light' ? theme.textColor : '#000000',\n    backgroundColor: theme.themeName === 'light' ? '#ffd12f' : theme.linkColor,\n    paddingHorizontal: 2,\n    fontWeight: '500',\n  }));\n  return (\n    <Text\n      accessibilityRole=\"link\"\n      style={[style]}\n      href={href}\n      onPress={_handlePress}\n    >\n      {children}\n    </Text>\n  );\n};\n\nlet contentComponents = {\n  a: Link,\n};\n\nexport let Content = (props: {|\n  children: React.Node,\n  fontSize?: number | string,\n|}) => {\n  let { children, fontSize = '12pt' } = props;\n  let theme = Style.useTheme();\n\n  let styles = React.useMemo(\n    () => (\n      <style global jsx>{`\n        .content {\n          width: 100%;\n        }\n        .content * {\n          font-size: ${fontSize};\n          line-height: 1.4em;\n        }\n        .content p,\n        .content h1,\n        .content h2,\n        .content h3,\n        .content h4,\n        .content h5,\n        .content h6,\n        .content ul,\n        .content ol,\n        .content li {\n          color: ${theme.textColor};\n          font-size: ${fontSize};\n          font-weight: 500;\n          line-height: 1.4em;\n        }\n\n        .content h1 {\n          font-size: 20pt;\n        }\n        .content h2 {\n          font-size: 18pt;\n        }\n        .content h3 {\n          font-size: 18pt;\n        }\n        .content h4 {\n          font-size: 16pt;\n        }\n        .content h5 {\n          font-size: 14pt;\n        }\n        .content h6 {\n          font-size: 12pt;\n        }\n\n        .content ul,\n        .content ol {\n          padding: 0;\n          padding-left: 18px;\n        }\n        .content ul li {\n          list-style-type: square;\n        }\n        .content li {\n          padding: 0;\n          list-style-position: outside;\n        }\n        .content pre {\n          line-height: 1.1em;\n          margin-top: 1em;\n          margin-bottom: 1em;\n          background-color: ${theme.backgroundSecondaryColor};\n          color: ${theme.textColor};\n          border-left: 3px solid ${theme.dimmedColor};\n          padding-top: 15px;\n          padding-bottom: 15px;\n          padding-left: 15px;\n        }\n        .content code {\n          font-size: 10pt;\n          font-weight: 700;\n          font-family: Menlo, Monaco, monospace;\n          padding: 2px;\n          background-color: ${theme.backgroundSecondaryColor};\n        }\n        .content pre > code {\n          font-size: 10pt;\n          font-weight: 700;\n          font-family: Menlo, Monaco, monospace;\n          padding: 0;\n          background-color: transparent;\n        }\n      `}</style>\n    ),\n    [theme],\n  );\n  return (\n    <MDXProvider components={contentComponents}>\n      <div className=\"content\">{children}</div>\n      {styles}\n    </MDXProvider>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AADA;AAIA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}